=> npm install -g @angular/cli@latest 
=> ng new myProjectName -- create new project
=> ng serve -- start (npm start)
=> CTR + C -- stop
=> ng generate component xyz -- generate component
=> component -- basic block of code which contains view 
=> routing and navigation -- on changing of URL load the component - <router-outlet></router-outlet>
=> service -- to access the common method
=> http -- ajax
=> npm ng build => build

---code---
1. npm i jquery or npm install jquery :- 
    npm i bootstrap@3
2. npm i -- package.json dependencies get downloaded in node_modules folder
3. component -- ng generate component firstComponent || ng g c firstComponent   (ng g c NewCompo --spec=false)
  import { Component } from '@angular/core';

  @Component({
    selector: 'app-root',
    templateUrl: './app.component.html',
    styleUrls: ['./app.component.css']
  })
  export class AppComponent {
    title = 'firstProject';
  }

4. SPEC.TS => test file 

5. routing 
  collection of array with path to view components.Routing basically means navigating between pages.
  A Router is a process of selecting path along which the data can be transferred from source to the destination.

6. data binding 
  {{data}}  --> using interpolation to value binding
  [property]="data" --> attribute Binding to DOM  
  (click)="save()" --> Event Binding 
  [(ngModel)]="data" --> two way data biding [FormsModule] 
  
  <button [disabled]="!isVisible" [style.color]="textColor" [class.active]="isActive" (click)="save()">Save</button>

7. for loop
  *ngFor="let value of arrayName;let i=index"  

8. pipe [|] ---> [ CommonModule ]   --> uppercase, lowercase  
  {{ object | json }}

  {{ varName | uppercase}}

  pipe is function, use for data manipulation.

9 service := access from any where.  

10. 'padding-top': true ? '0' : '30px' // if and else condition 

11.  #ngForm --> is variable

12 this.router.navigateByUrl('/dashboard'); // navigate to component to component on click.

13 



-------------------------------------

* generate new component 
  ng g c NewComponentName
  creating 4 file : html, css, ts, spec.ts
  adding path in app.module.ts file
  for view component use sector from .html file.

* routing 
  use for navigation
  for navigation first put <rout-outlet> and give condition on app.routing.module.ts file.
  if not match (for 404 page), if blank, if match








